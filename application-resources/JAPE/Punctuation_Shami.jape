/*--Developed By Ehtesham Iqbal / Robbie Mallah ----*/ 
/*--Email: Ehtesham.iqbal@kcl.ac.uk --------------------*/ 

Phase: Punctuation
Input: Lookup SpaceToken Token Split
Options: control = appelt

Rule: negbefore
(
  {Token.string=="?"}
  ({Token}|{SpaceToken})[0,5]
  ({Lookup.majorType == "ADR"}):ADR1  

):negbefore
-->
:negbefore
	{
		if (bindings.get("ADR1") != null && inputAS.get("ADR")!= null)
		{
			AnnotationSet patSet= gate.Utils.getContainedAnnotations(inputAS.get("ADR"),(gate.AnnotationSet)bindings.get("ADR1"));
			for(Annotation annot : patSet) 
			{   
			  
				annot.getFeatures().put("Negation","Negated");
				annot.getFeatures().put("JAPERule","?_ADR");
			} 
		}
	}

/*********************************************/

Rule: negafter
(
  ({Lookup.majorType == "ADR"}):ADR1
  ({SpaceToken})?
   {Token.string=="?"}


):negafter
-->
:negafter
	{
		
		if (bindings.get("ADR1") != null && inputAS.get("ADR")!= null)
		{
			
			AnnotationSet patSet= gate.Utils.getContainedAnnotations(inputAS.get("ADR"),(gate.AnnotationSet)bindings.get("ADR1"));
			for(Annotation annot : patSet) 
			{   
			   
				annot.getFeatures().put("Negation","Negated");
				annot.getFeatures().put("JAPERule","ADR_?");
			} 
			
		}
	}

/*********************************************/

Rule: atsignbefore
(
  ({Token.string == "@"})
  ({Lookup.majorType == "ADR"}):ADR1

):atsignbefore
-->
:atsignbefore
	{
		
		if (bindings.get("ADR1") != null && inputAS.get("ADR")!= null)
		{
			
			
			AnnotationSet patSet= gate.Utils.getContainedAnnotations(inputAS.get("ADR"),(gate.AnnotationSet)bindings.get("ADR1"));
			
			for(Annotation annot : patSet) 
			{   
			    
				annot.getFeatures().put("Negation","Negated");
				annot.getFeatures().put("JAPERule","@_ADR");
			} 
			
		}
	}

/***************************************************/

Rule: atsignafter
(
  ({Lookup.majorType == "ADR"}):ADR1
  ({Token.string == "@"})

):atsignafter
-->
:atsignafter
	{
		
		if (bindings.get("ADR1") != null && inputAS.get("ADR")!= null)
		{
			
			AnnotationSet patSet= gate.Utils.getContainedAnnotations(inputAS.get("ADR"),(gate.AnnotationSet)bindings.get("ADR1"));

			for(Annotation annot : patSet) 
			{   
			    
				annot.getFeatures().put("Negation","Negated");
				annot.getFeatures().put("JAPERule","ADR_@");
			} 
			
		}
	}

/************************************************/

Rule:SlashSign
(
  ({Token.string == "/"})
  ({Lookup.majorType == "ADR"}):ADR1
 
):SlashSign
-->
:SlashSign
	{
		
		if (bindings.get("ADR1") != null && inputAS.get("ADR")!= null)
		{
			
			AnnotationSet patSet= gate.Utils.getContainedAnnotations(inputAS.get("ADR"),(gate.AnnotationSet)bindings.get("ADR1"));

			for(Annotation annot : patSet) 
			{   
			    
				annot.getFeatures().put("Negation","Negated");
				annot.getFeatures().put("JAPERule","Slash");
			} 
			
		}
	}


/***********************************************/
/*
Rule: Bracket
(
  {Token.string=="("}
  ({Token})?
  ({Lookup.majorType == "ADR"}):ADR1


):bracket
-->
:bracket
	{
		
		if (bindings.get("ADR1") != null && inputAS.get("ADR")!= null)
		{
			
			//S1 = toString(bindings.get("ADR1"))			
			//
			//System.out.Println (inputAS.get("ADR"))
	
			List AL = new ArrayList((gate.AnnotationSet)bindings.get("ADR1"));
			
			for(int i = 0; i < AL.size(); i++) 
			{   
			    System.out.print(AL.get(i));
			}  

			List AL1 = new ArrayList(inputAS.get("ADR"));
			
			for(int i = 0; i < AL1.size(); i++) 
			{   
			    System.out.print(AL1.get(i));
			}  
			AnnotationSet patSet= gate.Utils.getContainedAnnotations(inputAS.get("ADR"),(gate.AnnotationSet)bindings.get("ADR1"));
			System.out.println("patSet size is " + patSet.size());
			for(Annotation annot : patSet) 
			{   
			    System.out.print(annot);
				annot.getFeatures().put("Negation","Negated");
				annot.getFeatures().put("JAPERule","Bracket");
			} 
			//gate.Annotation patAnn = (gate.Annotation)patSet.iterator().next();
			//patAnn.getFeatures().put("Negation","Negated");
		}
	}
*/

/*********************************************/

