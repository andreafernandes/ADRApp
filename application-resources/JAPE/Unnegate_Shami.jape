Phase: Un_negate
Input: Lookup Token Split
Options: control = first

Rule: thebefore
(
  {Token.string == "the"}
  ({Token})?
  ({Lookup.majorType == "ADR"}):ADR

):The_ADR
-->
:The_ADR	{
		
		if (bindings.get("ADR1") != null && inputAS.get("ADR")!= null)
		{
			AnnotationSet patSet= gate.Utils.getContainedAnnotations(inputAS.get("ADR"),(gate.AnnotationSet)bindings.get("ADR1"));
			for(Annotation annot : patSet) 
			{   
			    	ation","Affirmed");
				annot.getFeatures().put("JAPERule","The_ADR");
			} 
			
		}
	}

Rule: theorbefore
(
  {Token.string == "the"}
  ({Token})?
  ({Lookup.majorType == "ADR"}):ADR1
  {Token.string == "or"}
  ({Lookup.majorType == "ADR"}):ADR2

):theorbefore
-->
:ADR1	{
		
		if (bindings.get("ADR1") != null && inputAS.get("ADR")!= null)
		{
			AnnotationSet patSet= gate.Utils.getContainedAnnotations(inputAS.get("ADR"),(gate.AnnotationSet)bindings.get("ADR1"));
			for(Annotation annot : patSet) 
			{   
			    	
				annot.getFeatures().put("Negation","Affirmed");
				annot.getFeatures().put("JAPERule","Theorbefore");
			} 
			
		}
	}
,
:ADR2	{
		
		if (bindings.get("ADR1") != null && inputAS.get("ADR")!= null)
		{
			AnnotationSet patSet= gate.Utils.getContainedAnnotations(inputAS.get("ADR"),(gate.AnnotationSet)bindings.get("ADR2"));
			for(Annotation annot : patSet) 
			{   
			    	
				annot.getFeatures().put("Negation","Affirmed");
				annot.getFeatures().put("JAPERule","Theorbefore");
			} 
			
		}
	}


